#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#  
#         http://www.apache.org/licenses/LICENSE-2.0
#         
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.


# these are the services/repositories that are instantiated by the
# framework.  These are automatically injected into any domain object
# that declares a dependency.  Those that are not hidden are also
# shown in the user interface.
isis.services.prefix = org.apache.isis.examples.onlinedemo
isis.services = objstore.dflt.items.ToDoItemsDefault,\
                objstore.dflt.items.CategoriesDefault,\
                fixture.items.DemoFixturesDefault


# the online demo does not use the framework to setup fixtures;
# instead users can install their own fixtures 
isis.fixtures.prefix= org.apache.isis.examples.onlinedemo
//isis.fixtures= fixture.LogonAsSvenFixture,fixture.items.ToDoItemsFixture


# related to the lazy loading feature (below); helps the framework identify the "real"
# class that is in use.  both cglib and javassist implementations are provided, or it can be switched off.
isis.reflector.class-substitutor=org.apache.isis.runtimes.dflt.bytecode.dflt.classsubstitutor.CglibClassSubstitutor
#isis.reflector.class-substitutor=org.apache.isis.runtimes.dflt.bytecode.javassist.classsubstitutor.JavassistClassSubstitutor
#isis.reflector.class-substitutor=org.apache.isis.runtimes.dflt.bytecode.identity.classsubstitutor.ClassSubstitutorIdentity

# used to support lazy loading,  both cglib and javassist implementations are provided,
# or it can be switched off (because some object store implementations do this implicitly)
isis.persistor.object-factory=org.apache.isis.runtimes.dflt.bytecode.dflt.objectfactory.CglibObjectFactory
#isis.persistor.object-factory=org.apache.isis.runtimes.dflt.bytecode.javassist.objectfactory.JavassistObjectFactory
#isis.persistor.object-factory=org.apache.isis.runtimes.dflt.bytecode.identity.objectfactory.ObjectFactoryBasic


# the implementation of the container to inject into every domain object.
# this is not usually changed. 
isis.persistor.domain-object-container=org.apache.isis.core.metamodel.services.container.DomainObjectContainerDefault


# the authentication mechanism is configurable.  the onlinedemo uses its own implementation,
# which uses an in-memory list of registered users.
isis.authentication=org.apache.isis.examples.onlinedemo.auth.AuthenticationManagerSupportingInMemoryRegistrationInstaller


# the framework supports authorization; the usual implementation maps roles to permissions.
# this is switched off for the onlinedemo, however
#isis.reflector.facets.include=org.apache.isis.runtimes.dflt.runtime.authorization.standard.AuthorizationFacetFactoryImpl


# the default authorization mechanism can be put into "learn" mode, so that it allows all
# requests through, and writes out the permission entries that were checked.
#isis.authorization.learn=true


# configure the profile store.  this facility is not supported by the viewers used in
# the onlinedemo, so is included here for completeness only
isis.user-profile-store=in-memory


# configure the object store.  using the inmemory objectstore means that all data will
# be lost when the app is restarted.   it is commonly used for prototyping and testing 
isis.persistor=in-memory
